// <auto-generated />
using System;
using EtapaDeJuicio.Infraestructure.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EtapaDeJuicio.Infraestructure.Migrations
{
    [DbContext(typeof(EtapaDeJuicioDbContext))]
    [Migration("20250527030520_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("EtapaDeJuicio")
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EtapaDeJuicio.Domain.Entities.Audiencias.ActaAudiencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AudienciaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaGeneracion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AudienciaId")
                        .IsUnique();

                    b.HasIndex("FechaGeneracion");

                    b.ToTable("ActasAudiencia", "EtapaDeJuicio");
                });

            modelBuilder.Entity("EtapaDeJuicio.Domain.Entities.Audiencias.ActividadAudiencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ActaAudienciaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AudienciaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ActaAudienciaId");

                    b.HasIndex("AudienciaId");

                    b.HasIndex("FechaHora");

                    b.HasIndex("Tipo");

                    b.ToTable("ActividadesAudiencia", "EtapaDeJuicio");
                });

            modelBuilder.Entity("EtapaDeJuicio.Domain.Entities.Audiencias.Audiencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DuracionMinutos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(120);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("FechaHoraFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaHoraInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaHoraProgramada")
                        .HasColumnType("datetime2");

                    b.Property<string>("MotivoCancelacion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MotivoSuspension")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Estado");

                    b.HasIndex("FechaHoraProgramada");

                    b.HasIndex("Tipo");

                    b.ToTable("Audiencias", "EtapaDeJuicio");
                });

            modelBuilder.Entity("EtapaDeJuicio.Domain.Entities.Audiencias.ParticipanteAudiencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ActaAudienciaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AudienciaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ActaAudienciaId");

                    b.HasIndex("AudienciaId");

                    b.HasIndex("Rol");

                    b.ToTable("ParticipantesAudiencia", "EtapaDeJuicio");
                });

            modelBuilder.Entity("EtapaDeJuicio.Domain.Entities.Audiencias.ActaAudiencia", b =>
                {
                    b.HasOne("EtapaDeJuicio.Domain.Entities.Audiencias.Audiencia", null)
                        .WithMany()
                        .HasForeignKey("AudienciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EtapaDeJuicio.Domain.Entities.Audiencias.ActividadAudiencia", b =>
                {
                    b.HasOne("EtapaDeJuicio.Domain.Entities.Audiencias.ActaAudiencia", null)
                        .WithMany("Actividades")
                        .HasForeignKey("ActaAudienciaId");

                    b.HasOne("EtapaDeJuicio.Domain.Entities.Audiencias.Audiencia", null)
                        .WithMany("Actividades")
                        .HasForeignKey("AudienciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EtapaDeJuicio.Domain.Entities.Audiencias.ParticipanteAudiencia", b =>
                {
                    b.HasOne("EtapaDeJuicio.Domain.Entities.Audiencias.ActaAudiencia", null)
                        .WithMany("Participantes")
                        .HasForeignKey("ActaAudienciaId");

                    b.HasOne("EtapaDeJuicio.Domain.Entities.Audiencias.Audiencia", null)
                        .WithMany("Participantes")
                        .HasForeignKey("AudienciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EtapaDeJuicio.Domain.Entities.Audiencias.ActaAudiencia", b =>
                {
                    b.Navigation("Actividades");

                    b.Navigation("Participantes");
                });

            modelBuilder.Entity("EtapaDeJuicio.Domain.Entities.Audiencias.Audiencia", b =>
                {
                    b.Navigation("Actividades");

                    b.Navigation("Participantes");
                });
#pragma warning restore 612, 618
        }
    }
}
